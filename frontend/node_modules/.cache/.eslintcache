[{"E:\\expensex\\frontend\\src\\index.js":"1","E:\\expensex\\frontend\\src\\App.js":"2","E:\\expensex\\frontend\\src\\context\\globalContext.js":"3","E:\\expensex\\frontend\\src\\styles\\GlobalStyle.js":"4","E:\\expensex\\frontend\\src\\styles\\Layouts.js":"5","E:\\expensex\\frontend\\src\\Components\\Orb\\Orb.js":"6","E:\\expensex\\frontend\\src\\Components\\Income\\Income.js":"7","E:\\expensex\\frontend\\src\\Components\\Navigation\\Navigation.js":"8","E:\\expensex\\frontend\\src\\Components\\Expenses\\Expenses.js":"9","E:\\expensex\\frontend\\src\\Components\\Dashboard\\Dashboard.js":"10","E:\\expensex\\frontend\\src\\Components\\Singup\\index.jsx":"11","E:\\expensex\\frontend\\src\\Components\\Login\\index.jsx":"12","E:\\expensex\\frontend\\src\\Components\\Expenses\\ExpenseForm.js":"13","E:\\expensex\\frontend\\src\\utils\\Icons.js":"14","E:\\expensex\\frontend\\src\\utils\\useWindowSize.js":"15","E:\\expensex\\frontend\\src\\Components\\Form\\Form.js":"16","E:\\expensex\\frontend\\src\\utils\\menuItems.js":"17","E:\\expensex\\frontend\\src\\History\\History.js":"18","E:\\expensex\\frontend\\src\\Components\\IncomeItem\\IncomeItem.js":"19","E:\\expensex\\frontend\\src\\Components\\Chart\\Chart.js":"20","E:\\expensex\\frontend\\src\\Components\\Button\\Button.js":"21","E:\\expensex\\frontend\\src\\utils\\dateFormat.js":"22","E:\\expensex\\frontend\\src\\Components\\Chart\\Chart2.js":"23"},{"size":408,"mtime":1675919642000,"results":"24","hashOfConfig":"25"},{"size":2283,"mtime":1687448080000,"results":"26","hashOfConfig":"25"},{"size":3379,"mtime":1687593118000,"results":"27","hashOfConfig":"25"},{"size":1239,"mtime":1675919642000,"results":"28","hashOfConfig":"25"},{"size":240,"mtime":1687446754000,"results":"29","hashOfConfig":"25"},{"size":912,"mtime":1675919642000,"results":"30","hashOfConfig":"25"},{"size":2482,"mtime":1687178034000,"results":"31","hashOfConfig":"25"},{"size":3271,"mtime":1687447654000,"results":"32","hashOfConfig":"25"},{"size":2670,"mtime":1687429060000,"results":"33","hashOfConfig":"25"},{"size":6164,"mtime":1687445502000,"results":"34","hashOfConfig":"25"},{"size":2365,"mtime":1687422108000,"results":"35","hashOfConfig":"25"},{"size":1926,"mtime":1687447698000,"results":"36","hashOfConfig":"25"},{"size":4809,"mtime":1687446262000,"results":"37","hashOfConfig":"25"},{"size":1897,"mtime":1687413450000,"results":"38","hashOfConfig":"25"},{"size":494,"mtime":1675919642000,"results":"39","hashOfConfig":"25"},{"size":4727,"mtime":1687356420000,"results":"40","hashOfConfig":"25"},{"size":559,"mtime":1687269680000,"results":"41","hashOfConfig":"25"},{"size":1713,"mtime":1687188026000,"results":"42","hashOfConfig":"25"},{"size":4700,"mtime":1687356240000,"results":"43","hashOfConfig":"25"},{"size":1671,"mtime":1687446118000,"results":"44","hashOfConfig":"25"},{"size":655,"mtime":1675919642000,"results":"45","hashOfConfig":"25"},{"size":113,"mtime":1687438654000,"results":"46","hashOfConfig":"25"},{"size":1761,"mtime":1687445978000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"39318f",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"51"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"51"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"51"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"51"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"51"},"E:\\expensex\\frontend\\src\\index.js",[],[],[],"E:\\expensex\\frontend\\src\\App.js",[],[],"E:\\expensex\\frontend\\src\\context\\globalContext.js",["128","129","130","131","132","133"],[],"E:\\expensex\\frontend\\src\\styles\\GlobalStyle.js",[],[],"E:\\expensex\\frontend\\src\\styles\\Layouts.js",[],[],"E:\\expensex\\frontend\\src\\Components\\Orb\\Orb.js",[],[],"E:\\expensex\\frontend\\src\\Components\\Income\\Income.js",["134","135"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\n\nfunction Income() {\n    const {addIncome,incomes, getIncomes, deleteIncome, totalIncome} = useGlobalContext()\n\n    useEffect(() =>{\n        getIncomes()\n    }, [])\n    return (\n        <IncomeStyled>\n            <InnerLayout>\n                <h1>Incomes</h1>\n                <h2 className=\"total-income\">Total Income: <span>â‚¹{totalIncome()}</span></h2>\n                <div className=\"income-content\">\n                    <div className=\"form-container\">\n                        <Form />\n                    </div>\n                    <div className=\"incomes\">\n                        {incomes.map((income) => {\n                            const {_id, title, amount, date, category, description, type} = income;\n                            return <IncomeItem\n                                key={_id}\n                                id={_id} \n                                title={title} \n                                description={description} \n                                amount={amount} \n                                date={date} \n                                type={type}\n                                category={category} \n                                indicatorColor=\"var(--color-green)\"\n                                deleteItem={deleteIncome}\n                            />\n                        })}\n                    </div>\n                </div>\n            </InnerLayout>\n        </IncomeStyled>\n    )\n}\n\nconst IncomeStyled = styled.div`\n    display: flex;\n    overflow: auto;\n    .total-income{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        /* From https://css.glass */\n        background: rgba(255, 255, 255, 0.41);\n        border-radius: 16px;\n        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n        \n        border: 1px solid rgba(255, 255, 255, 1);\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 2rem;\n        gap: .5rem;\n        span{\n            font-size: 2.5rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n    .income-content{\n        display: flex;\n        gap: 2rem;\n        .incomes{\n            flex: 1;\n        }\n    }\n`;\n\nexport default Income","E:\\expensex\\frontend\\src\\Components\\Navigation\\Navigation.js",["136"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { signout } from '../../utils/Icons'\nimport { menuItems } from '../../utils/menuItems'\nimport '../Singup/index'\n\n\n\nfunction Navigation({active, setActive}) {\n    const handleLogout = () => {\n\t\tlocalStorage.removeItem(\"token\");\n\t\twindow.location.reload();\n\t};\n    \n    return (\n        <NavStyled>\n            <div className=\"user-con\">\n                \n                <div className=\"text\">\n                    <h2>ExpenzX</h2>\n                    \n                </div>\n            </div>\n            <br/>\n            <br/>\n            <ul className=\"menu-items\">\n                {menuItems.map((item) => {\n                    return <li\n                        key={item.id}\n                        onClick={() => setActive(item.id)}\n                        className={active === item.id ? 'active': ''}\n                    >\n                        {item.icon}\n                        <span>{item.title}</span>\n                    </li>\n                })}\n            </ul>\n            <div className=\"bottom-nav\">\n                <li onClick={handleLogout}>\n                    {signout} Sign Out\n                </li>\n            </div>\n        </NavStyled>\n    )\n}\n\nconst NavStyled = styled.nav`\n    \n    width: 200px;\n    height: 100%;\n   \n    /* From https://css.glass */\nbackground: transparent;\n\n\nborder: none;\n\n   \n    display: flex;\n    flex-direction: column;\n    justify-content: left;\n    \n    .bottom-nav{\n        margin:30px;\n    }\n\n    .user-con{\n        height: 100px;\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        margin:20px;\n        img{\n            width: 80px;\n            height: 80px;\n            border-radius: 50%;\n            object-fit: cover;\n            background: #fcf6f9;\n            border: 2px solid #FFFFFF;\n            padding: .2rem;\n            box-shadow: 0px 1px 17px rgba(0, 0, 0, 0.06);\n        }\n        h2{\n            font-family: 'Pacifico', cursive;\n            font-size:2.5rem;\n            color:black;\n        }\n        p{\n            color: black;\n        }\n    }\n\n    .menu-items{\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        margin:20px;\n        li{\n            display: grid;\n            grid-template-columns: 40px auto;\n            align-items: center;\n            margin: .6rem 0;\n            font-weight: 500;\n            cursor: pointer;\n            transition: all .4s ease-in-out;\n            color: black;\n            padding: 0.3rem;\n            position: relative;\n            i{\n                color: black;\n                font-size: 1.4rem;\n                transition: all .4s ease-in-out;\n            }\n        }\n    }\n\n    .active{\n        color: rgba(34, 34, 96, 1) !important;\n        i{\n            color: rgba(34, 34, 96, 1) !important;\n        }\n        &::before{\n            content: \"\";\n            position: absolute;\n            left: 0;\n            top: 0;\n            width: 4px;\n            height: 100%;\n            background: rgb(59,59,139);\n            background: linear-gradient(90deg, rgba(59,59,139,1) 0%, rgba(214,160,209,1) 0%);\n            border-radius: 0 10px 10px 0;\n        }\n    }\n`;\n\nexport default Navigation","E:\\expensex\\frontend\\src\\Components\\Expenses\\Expenses.js",["137","138","139"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport { InnerLayout } from '../../styles/Layouts';\nimport Form from '../Form/Form';\nimport IncomeItem from '../IncomeItem/IncomeItem';\nimport ExpenseForm from './ExpenseForm';\n\nfunction Expenses() {\n    const {addIncome,expenses, getExpenses, deleteExpense, totalExpenses} = useGlobalContext()\n\n    useEffect(() =>{\n        getExpenses()\n    }, [])\n    return (\n        <ExpenseStyled>\n            <InnerLayout>\n                <h1>Expenses</h1>\n                <h2 className=\"total-income\">Total Expense: <span>â‚¹{totalExpenses()}</span></h2>\n                <div className=\"income-content\">\n                    <div className=\"form-container\">\n                        <ExpenseForm />\n                    </div>\n                    <div className=\"incomes\">\n                        {expenses.map((income) => {\n                            const {_id, title, amount, date, category, description, type} = income;\n                            console.log(income)\n                            return <IncomeItem\n                                key={_id}\n                                id={_id} \n                                title={title} \n                                description={description} \n                                amount={amount} \n                                date={date} \n                                type={type}\n                                category={category} \n                                indicatorColor=\"var(--color-green)\"\n                                deleteItem={deleteExpense}\n                            />\n                        })}\n                    </div>\n                </div>\n            </InnerLayout>\n        </ExpenseStyled>\n    )\n}\n\nconst ExpenseStyled = styled.div`\n    display: flex;\n    overflow: auto;\n    .total-income{\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        padding: 1rem;\n        margin: 1rem 0;\n        font-size: 2rem;\n        gap: .5rem;\n        /* From https://css.glass */\n        background: rgba(255, 255, 255, 0.41);\n        border-radius: 16px;\n        box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n        backdrop-filter: blur(20px);\n        -webkit-backdrop-filter: blur(20px);\n        border: 1px solid rgba(255, 255, 255, 1);\n        span{\n            font-size: 2.5rem;\n            font-weight: 800;\n            color: var(--color-green);\n        }\n    }\n    .income-content{\n        display: flex;\n        gap: 2rem;\n        .incomes{\n            flex: 1;\n        }\n    }\n`;\n\nexport default Expenses","E:\\expensex\\frontend\\src\\Components\\Dashboard\\Dashboard.js",["140","141","142","143"],[],"import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext';\nimport History from '../../History/History';\nimport { InnerLayout } from '../../styles/Layouts';\nimport { dollar, rupee } from '../../utils/Icons';\nimport Chart from '../Chart/Chart';\nimport Navigation from '../Navigation/Navigation';\nimport Chart2 from '../Chart/Chart2';\nimport Form from '../Form/Form';\n\nfunction Dashboard() {\n    const {totalExpenses,incomes, expenses, totalIncome, totalBalance, getIncomes, getExpenses } = useGlobalContext()\n    const {title} = Form()\n    useEffect(() => {\n        getIncomes()\n        getExpenses()\n    }, [])\n\n    return (\n        <DashboardStyled>\n            <InnerLayout>\n                <h1>Dashboard</h1>\n                <br/><br/>\n                <div className=\"stats-con\">\n                    <div className=\"chart-con\">\n                        <Chart />\n                        <br/>\n                        <Chart2/>\n                        <div className=\"amount-con\">\n                            <div className=\"income\">\n                                <h2>Total Income</h2>\n                                <p>\n                                    {rupee} {totalIncome()}\n                                </p>\n                            </div>\n                            <div className=\"expense\">\n                                <h2>Total Expense</h2>\n                                <p>\n                                    {rupee} {totalExpenses()}\n                                </p>\n                            </div>\n                            <div className=\"balance\">\n                                <h2>Total Balance</h2>\n                                <p>\n                                    {rupee} {totalBalance()}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"history-con\">\n                        <History />\n                        <h2 className=\"salary-title\"><span>Income</span></h2>\n                        <div className=\"salary-item\">\n                            <p>\n                                Highest : &nbsp;\n                                â‚¹{Math.max(...incomes.map(item => item.amount ))}\n                               \n                            </p>\n                        </div>\n                        <br/>\n                        <div className=\"salary-item\">\n                            <p>\n                                Lowest : &nbsp;\n                                â‚¹{Math.min(...incomes.map(item => item.amount))}\n                            </p>\n                        </div>\n                        <h2 className=\"salary-title\"><span>Expense</span></h2>\n                        <div className=\"salary-item\">\n                            <p>\n                                Highest : &nbsp;\n                                â‚¹{Math.max(...expenses.map(item => item.amount))}\n                            </p>\n                        </div>\n                        <br/>\n                        <div className=\"salary-item\">\n                            <p>\n                                Lowest : &nbsp;\n                                â‚¹{Math.min(...expenses.map(item => item.amount))}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </InnerLayout>\n        </DashboardStyled>\n    )\n}\n\nconst DashboardStyled = styled.div`\n    .stats-con{\n        display: grid;\n        grid-template-columns: repeat(5, 1fr);\n        gap: 2rem;\n        .chart-con{\n            grid-column: 1 / 4;\n            height: 300px;\n            .amount-con{\n                display: grid;\n                grid-template-columns: repeat(4, 1fr);\n                gap: 2rem;\n                margin-top: 2rem;\n                .income, .expense{\n                    grid-column: span 2;\n                }\n                .income, .expense, .balance{\n                    /* From https://css.glass */\n                    background: rgba(255, 255, 255, 0.41);\n                    border-radius: 16px;\n                    box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n                    \n                    -webkit-backdrop-filter: blur(20px);\n                    border: 1px solid rgba(255, 255, 255, 1);\n                    padding: 1rem;\n                    p{\n                        font-size: 3.5rem;\n                        font-weight: 700;\n                    }\n                }\n\n                .balance{\n                    grid-column: 2 / 4;\n                    display: flex;\n                    flex-direction: column;\n                    justify-content: center;\n                    align-items: center;\n                    width: 350px;\n                    padding-bottom:10px;\n                    p{\n                        color: var(--color-green);\n                        opacity: 0.6;\n                        font-size: 4.5rem;\n                    }\n                }\n            }\n        }\n\n        .history-con{\n            grid-column: 4 / -1;\n            h2{\n                margin: 1rem 0;\n                display: flex;\n                align-items: center;\n                justify-content: space-between;\n            }\n            .salary-title{\n                font-size: 1.2rem;\n                span{\n                    font-size: 1.8rem;\n                }\n            }\n            .salary-item{\n                /* From https://css.glass */\n                background: rgba(255, 255, 255, 0.41);\n                border-radius: 16px;\n                box-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n                \n                \n                border: 1px solid rgba(255, 255, 255, 1);\n                padding: 1rem;\n                \n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n                p{\n                    font-weight: 600;\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n`;\n\nexport default Dashboard","E:\\expensex\\frontend\\src\\Components\\Singup\\index.jsx",[],[],"E:\\expensex\\frontend\\src\\Components\\Login\\index.jsx",[],[],"E:\\expensex\\frontend\\src\\Components\\Expenses\\ExpenseForm.js",["144"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useGlobalContext } from '../../context/globalContext';\nimport Button from '../Button/Button';\nimport { plus } from '../../utils/Icons';\n\n\nfunction ExpenseForm() {\n    const {addExpense, error, setError,budgetLimit} = useGlobalContext()\n    const [inputState, setInputState] = useState({\n        title: '',\n        amount: '',\n        date: '',\n        category: '',\n        description: '',\n    })\n\n    const { title, amount, date, category,description } = inputState;\n\n    const handleInput = name => e => {\n        setInputState({...inputState, [name]: e.target.value})\n        setError('')\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        addExpense(inputState)\n        \n        setInputState({\n            title: '',\n            amount: '',\n            date: '',\n            category: '',\n            description: '',\n        })\n        {budgetLimit()};\n    }\n\n    return (\n        <ExpenseFormStyled onSubmit={handleSubmit}>\n            {error && <p className='error'>{error}</p>}\n           \n            <div className=\"input-control\">\n                <input \n                    type=\"text\" \n                    value={title}\n                    name={'title'} \n                    placeholder=\"Expense Title\"\n                    onChange={handleInput('title')}\n                />\n            </div>\n            <div className=\"input-control\">\n                <input value={amount}  \n                    type=\"text\" \n                    name={'amount'} \n                    placeholder={'Expense Amount'}\n                    onChange={handleInput('amount')} \n                />\n            </div>\n            <div className=\"input-control\">\n                <DatePicker \n                    id='date'\n                    placeholderText='Enter A Date'\n                    selected={date}\n                    dateFormat=\"dd/MM/yyyy\"\n                    onChange={(date) => {\n                        setInputState({...inputState, date: date})\n                    }}\n                />\n            </div>\n            <div className=\"selects input-control\">\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\n                    <option value=\"\" disabled >Select Option</option>\n                    <option value=\"education\">Education</option>\n                    <option value=\"groceries\">Groceries</option>\n                    <option value=\"health\">Health</option>\n                    <option value=\"subscriptions\">Subscriptions</option>\n                    <option value=\"takeaways\">Food</option>\n                    <option value=\"clothing\">Clothing</option>  \n                    <option value=\"travelling\">Travelling</option>  \n                    <option value=\"other\">Other</option>  \n                </select>\n            </div>\n            <div className=\"input-control\">\n                <textarea name=\"description\" value={description} placeholder='Add A Reference' id=\"description\" cols=\"30\" rows=\"4\" onChange={handleInput('description')}></textarea>\n            </div>\n            <div className=\"submit-btn\">\n                <Button \n                    name={'Add Expense'}\n                    icon={plus}\n                    bPad={'.8rem 1.6rem'}\n                    bRad={'30px'}\n                    bg={'var(--color-accent'}\n                    color={'#fff'}\n                />\n            </div>\n        </ExpenseFormStyled>\n    )\n}\n\n\nconst ExpenseFormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    input, textarea, select{\n        font-family: inherit;\n        font-size: inherit;\n        outline: none;\n        border: none;\n        padding: .5rem 1rem;\n        \n        \n        \n        color: black;\n        /* From https://css.glass */\nbackground: rgba(255, 255, 255, 0.41);\nborder-radius: 16px;\nbox-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n\n-webkit-backdrop-filter: blur(20px);\nborder: 1px solid rgba(255, 255, 255, 1);\n        resize: none;\n        &::placeholder{\n            color: rgba(34, 34, 96, 0.4);\n        }\n    }\n    .input-control{\n        input{\n            width: 100%;\n        }\n    }\n\n    .selects{\n        display: flex;\n        justify-content: flex-end;\n        select{\n            color: rgba(34, 34, 96, 0.4);\n            &:focus, &:active{\n                color: rgba(34, 34, 96, 1);\n            }\n        }\n    }\n\n    .submit-btn{\n        button{\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n            &:hover{\n                background: var(--color-green) !important;\n            }\n        }\n    }\n`;\nexport default ExpenseForm","E:\\expensex\\frontend\\src\\utils\\Icons.js",[],[],"E:\\expensex\\frontend\\src\\utils\\useWindowSize.js",[],[],"E:\\expensex\\frontend\\src\\Components\\Form\\Form.js",["145"],[],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useGlobalContext } from '../../context/globalContext';\nimport Button from '../Button/Button';\nimport { plus } from '../../utils/Icons';\n\n\nfunction Form() {\n    const {addIncome, getIncomes, error, setError} = useGlobalContext()\n    const [inputState, setInputState] = useState({\n        title: '',\n        amount: '',\n        date: '',\n        category: '',\n        description: '',\n    })\n\n    const { title, amount, date, category,description } = inputState;\n\n    const handleInput = name => e => {\n        setInputState({...inputState, [name]: e.target.value})\n        setError('')\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        addIncome(inputState)\n        setInputState({\n            title: '',\n            amount: '',\n            date: '',\n            category: '',\n            description: '',\n        })\n    }\n\n    return (\n        <FormStyled onSubmit={handleSubmit}>\n            {error && <p className='error'>{error}</p>}\n            <div className=\"input-control\">\n                <input \n                    type=\"text\" \n                    value={title}\n                    name={'title'} \n                    placeholder=\"Income Title\"\n                    onChange={handleInput('title')}\n                />\n            </div>\n            <div className=\"input-control\">\n                <input value={amount}  \n                    type=\"text\" \n                    name={'amount'} \n                    placeholder={'Income Amount'}\n                    onChange={handleInput('amount')} \n                />\n            </div>\n            <div className=\"input-control\">\n                <DatePicker \n                    id='date'\n                    placeholderText='Enter A Date'\n                    selected={date}\n                    dateFormat=\"dd/MM/yyyy\"\n                    onChange={(date) => {\n                        setInputState({...inputState, date: date})\n                    }}\n                />\n            </div>\n            <div className=\"selects input-control\">\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\n                    <option value=\"\"  disabled >Select Option</option>\n                    <option value=\"salary\">Salary</option>\n                    <option value=\"freelancing\">Freelancing</option>\n                    <option value=\"investments\">Investiments</option>\n                    <option value=\"stocks\">Stocks</option>\n                    <option value=\"bitcoin\">Rental income</option>\n                    <option value=\"bank\">Bank Transfer</option>  \n                    <option value=\"youtube\">Youtube</option>  \n                    <option value=\"other\">Other</option>  \n                </select>\n            </div>\n            <div className=\"input-control\">\n                <textarea name=\"description\" value={description} placeholder='Add A Reference' id=\"description\" cols=\"30\" rows=\"4\" onChange={handleInput('description')}></textarea>\n            </div>\n            <div className=\"submit-btn\">\n                <Button \n                    name={'Add Income'}\n                    icon={plus}\n                    bPad={'.8rem 1.6rem'}\n                    bRad={'30px'}\n                    bg={'var(--color-accent'}\n                    color={'#fff'}\n                />\n            </div>\n        </FormStyled>\n    )\n}\n\n\nconst FormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    input, textarea, select{\n        font-family: inherit;\n        font-size: inherit;\n        outline: none;\n        \n        padding: .5rem 1rem;\n        \n        /* From https://css.glass */\nbackground: rgba(255, 255, 255, 0.41);\nborder-radius: 16px;\nbox-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\nbackdrop-filter: blur(20px);\n-webkit-backdrop-filter: blur(20px);\nborder: 1px solid rgba(255, 255, 255, 1);\n        resize: none;\n        \n        color: black;\n        &::placeholder{\n            color: rgba(34, 34, 96, 0.4);\n        }\n    }\n    .input-control{\n        input{\n            width: 100%;\n        }\n    }\n\n    .selects{\n        display: flex;\n        justify-content: flex-end;\n        select{\n            color: rgba(34, 34, 96, 0.4);\n            &:focus, &:active{\n                color: rgba(34, 34, 96, 1);\n            }\n        }\n    }\n\n    .submit-btn{\n        button{\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n            &:hover{\n                background: var(--color-green) !important;\n            }\n        }\n    }\n`;\nexport default Form","E:\\expensex\\frontend\\src\\utils\\menuItems.js",["146","147"],[],"import {dashboard, expenses, income, transactions, trend} from '../utils/Icons'\n\nexport const menuItems = [\n   /* {\n        id: 1,\n        title: 'Dashboard',\n        icon: dashboard,\n        link: '/dashboard'\n        \n    },*/\n    {\n        id: 2,\n        title: \"Dashboard\",\n        icon: dashboard,\n        link: \"/dashboard\",\n        \n    },\n    {\n        id: 3,\n        title: \"Incomes\",\n        icon: income,\n        link: \"/dashboard\",\n    },\n    {\n        id: 4,\n        title: \"Expenses\",\n        icon: expenses,\n        link: \"/dashboard\",\n    },\n]","E:\\expensex\\frontend\\src\\History\\History.js",[],[],"E:\\expensex\\frontend\\src\\Components\\IncomeItem\\IncomeItem.js",["148"],[],"import React from 'react'\nimport styled from 'styled-components'\nimport { dateFormat } from '../../utils/dateFormat';\nimport { bitcoin, book, calender, card, circle, clothing, comment, dollar, food, freelance, medical, money, piggy, rupee, stocks, takeaway, trash, tv, users, yt } from '../../utils/Icons';\nimport Button from '../Button/Button';\n\nfunction IncomeItem({\n    id,\n    title,\n    amount,\n    date,\n    category,\n    description,\n    deleteItem,\n    indicatorColor,\n    type\n}) {\n\n    const categoryIcon = () =>{\n        switch(category) {\n            case 'salary':\n                return money;\n            case 'freelancing':\n                return freelance\n            case 'investments':\n                return stocks;\n            case 'stocks':\n                return users;\n            case 'bitcoin':\n                return bitcoin;\n            case 'bank':\n                return card;\n            case 'youtube':\n                return yt;\n            case 'other':\n                return piggy;\n            default:\n                return ''\n        }\n    }\n\n    const expenseCatIcon = () => {\n        switch (category) {\n            case 'education':\n                return book;\n            case 'groceries':\n                return food;\n            case 'health':\n                return medical;\n            case 'subscriptions':\n                return tv;\n            case 'takeaways':\n                return takeaway;\n            case 'clothing':\n                return clothing;\n            case 'travelling':\n                return freelance;\n            case 'other':\n                return circle;\n            default:\n                return ''\n        }\n    }\n\n    console.log('type', type)\n\n    return (\n        <IncomeItemStyled indicator={indicatorColor}>\n            <div className=\"icon\">\n                {type === 'expense' ? expenseCatIcon() : categoryIcon()}\n            </div>\n            <div className=\"content\">\n                <h5>{title}</h5>\n                <div className=\"inner-content\">\n                    <div className=\"text\">\n                        <p>{rupee} {amount}</p>\n                        <p>{calender} {dateFormat(date)}</p>\n                        <p>\n                            {comment}\n                            {description}\n                        </p>\n                    </div>\n                    <div className=\"btn-con\">\n                        <Button \n                            icon={trash}\n                            bPad={'1rem'}\n                            bRad={'50%'}\n                            bg={'var(--primary-color'}\n                            color={'#fff'}\n                            iColor={'#fff'}\n                            hColor={'var(--color-green)'}\n                            onClick={() => deleteItem(id)}\n                        />\n                    </div>\n                </div>\n            </div>\n        </IncomeItemStyled>\n    )\n}\n\nconst IncomeItemStyled = styled.div`\n/* From https://css.glass */\nbackground: rgba(255, 255, 255, 0.41);\nborder-radius: 16px;\nbox-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\n\nborder: 1px solid rgba(255, 255, 255, 1);\n    padding: 1rem;\n    margin-bottom: 1rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    width: 100%;\n    color: #222260;\n    .icon{\n        width: 80px;\n        height: 80px;\n        border-radius: 20px;\n        background: #F5F5F5;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        border: 2px solid #FFFFFF;\n        i{\n            font-size: 2.6rem;\n        }\n    }\n\n    .content{\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        gap: .2rem;\n        h5{\n            font-size: 1.3rem;\n            padding-left: 2rem;\n            position: relative;\n            &::before{\n                content: '';\n                position: absolute;\n                left: 0;\n                top: 50%;\n                transform: translateY(-50%);\n                width: .8rem;\n                height: .8rem;\n                border-radius: 50%;\n                background: ${props => props.indicator};\n            }\n        }\n\n        .inner-content{\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n            .text{\n                display: flex;\n                align-items: center;\n                gap: 1.5rem;\n                p{\n                    display: flex;\n                    align-items: center;\n                    gap: 0.5rem;\n                    color: var(--primary-color);\n                    opacity: 0.8;\n                }\n            }\n        }\n    }\n`;\n\nexport default IncomeItem","E:\\expensex\\frontend\\src\\Components\\Chart\\Chart.js",["149","150","151"],[],"import React from 'react'\nimport {Chart as ChartJs, \n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n} from 'chart.js'\n\nimport {Line} from 'react-chartjs-2'\nimport styled from 'styled-components'\nimport { useGlobalContext } from '../../context/globalContext'\nimport { dateFormat } from '../../utils/dateFormat'\nimport moment from 'moment'\n\nChartJs.register(\n    CategoryScale,\n    LinearScale,\n    PointElement,\n    LineElement,\n    Title,\n    Tooltip,\n    Legend,\n    ArcElement,\n)\n\nfunction Chart() {\n    const {incomes, expenses} = useGlobalContext()\n    const Moment = require('moment')\n    const data = {\n        labels: incomes.map((inc) =>{\n            const {date} = inc\n           return dateFormat(date)\n        }).sort(),\n        datasets: [\n            {\n                label: 'Income',\n                data: [\n                    ...incomes.map((income) => {\n                        const {amount} = income\n                        return amount\n                    })\n                ],\n                backgroundColor: 'green',\n                tension: .2,\n            }   \n        ]    \n    }\n    \n\n\n    return (\n        <ChartStyled >\n            <Line data={data} />\n        </ChartStyled>\n    )\n}\n\nconst ChartStyled = styled.div`\n    \n    \n    \n    padding: 1rem;\n    \n    height: 100%;\n    /* From https://css.glass */\nbackground: rgba(255, 255, 255, 0.41);\nborder-radius: 16px;\nbox-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\nbackdrop-filter: blur(20px);\n-webkit-backdrop-filter: blur(20px);\nborder: 1px solid rgba(255, 255, 255, 1);\n        resize: none;\n`;\n\nexport default Chart","E:\\expensex\\frontend\\src\\Components\\Button\\Button.js",[],[],"E:\\expensex\\frontend\\src\\utils\\dateFormat.js",[],[],"E:\\expensex\\frontend\\src\\Components\\Chart\\Chart2.js",["152","153","154"],[],"import React from 'react'\r\nimport moment from 'moment'\r\nimport {Chart as ChartJs, \r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n} from 'chart.js'\r\n\r\nimport {Line} from 'react-chartjs-2'\r\nimport styled from 'styled-components'\r\nimport { useGlobalContext } from '../../context/globalContext'\r\nimport { dateFormat } from '../../utils/dateFormat'\r\n\r\nChartJs.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n)\r\n\r\nfunction Chart2() {\r\n    const {incomes, expenses} = useGlobalContext()\r\n    const Moment = require('moment')\r\n    const data = {\r\n        labels: expenses.map((inc) =>{\r\n            const {date} = inc\r\n            return dateFormat(date)\r\n        }).sort(),\r\n        datasets: [\r\n           \r\n            {\r\n                label: 'Expenses',\r\n                data: [\r\n                    ...expenses.map((expense) => {\r\n                        const {amount} = expense\r\n                        return amount\r\n                    })\r\n                ],\r\n                backgroundColor: 'red',\r\n                tension: .2\r\n            }\r\n        ]\r\n    }\r\n    \r\n\r\n\r\n    return (\r\n        <ChartStyled >\r\n            <Line data={data} />\r\n        </ChartStyled>\r\n    )\r\n}\r\n\r\nconst ChartStyled = styled.div`\r\n    \r\n    \r\n    \r\n    padding: 1rem;\r\n    \r\n    height: 100%;\r\n    /* From https://css.glass */\r\nbackground: rgba(255, 255, 255, 0.41);\r\nborder-radius: 16px;\r\nbox-shadow: 0 4px 30px rgba(0, 0, 0, 0.1);\r\nbackdrop-filter: blur(20px);\r\n-webkit-backdrop-filter: blur(20px);\r\nborder: 1px solid rgba(255, 255, 255, 1);\r\n        resize: none;\r\n`;\r\n\r\nexport default Chart2",{"ruleId":"155","severity":1,"message":"156","line":3,"column":8,"nodeType":"157","messageId":"158","endLine":3,"endColumn":13},{"ruleId":"155","severity":1,"message":"159","line":4,"column":8,"nodeType":"157","messageId":"158","endLine":4,"endColumn":18},{"ruleId":"155","severity":1,"message":"160","line":20,"column":15,"nodeType":"157","messageId":"158","endLine":20,"endColumn":23},{"ruleId":"155","severity":1,"message":"161","line":34,"column":15,"nodeType":"157","messageId":"158","endLine":34,"endColumn":18},{"ruleId":"155","severity":1,"message":"160","line":50,"column":15,"nodeType":"157","messageId":"158","endLine":50,"endColumn":23},{"ruleId":"155","severity":1,"message":"161","line":66,"column":15,"nodeType":"157","messageId":"158","endLine":66,"endColumn":18},{"ruleId":"155","severity":1,"message":"162","line":9,"column":12,"nodeType":"157","messageId":"158","endLine":9,"endColumn":21},{"ruleId":"163","severity":1,"message":"164","line":13,"column":8,"nodeType":"165","endLine":13,"endColumn":10,"suggestions":"166"},{"ruleId":"155","severity":1,"message":"167","line":1,"column":17,"nodeType":"157","messageId":"158","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"168","line":5,"column":8,"nodeType":"157","messageId":"158","endLine":5,"endColumn":12},{"ruleId":"155","severity":1,"message":"162","line":10,"column":12,"nodeType":"157","messageId":"158","endLine":10,"endColumn":21},{"ruleId":"163","severity":1,"message":"169","line":14,"column":8,"nodeType":"165","endLine":14,"endColumn":10,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"171","line":6,"column":10,"nodeType":"157","messageId":"158","endLine":6,"endColumn":16},{"ruleId":"155","severity":1,"message":"172","line":8,"column":8,"nodeType":"157","messageId":"158","endLine":8,"endColumn":18},{"ruleId":"155","severity":1,"message":"173","line":14,"column":12,"nodeType":"157","messageId":"158","endLine":14,"endColumn":17},{"ruleId":"163","severity":1,"message":"174","line":18,"column":8,"nodeType":"165","endLine":18,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":38,"column":9,"nodeType":"178","messageId":"179","endLine":38,"endColumn":24},{"ruleId":"155","severity":1,"message":"180","line":11,"column":23,"nodeType":"157","messageId":"158","endLine":11,"endColumn":33},{"ruleId":"155","severity":1,"message":"181","line":1,"column":38,"nodeType":"157","messageId":"158","endLine":1,"endColumn":50},{"ruleId":"155","severity":1,"message":"182","line":1,"column":52,"nodeType":"157","messageId":"158","endLine":1,"endColumn":57},{"ruleId":"155","severity":1,"message":"171","line":4,"column":68,"nodeType":"157","messageId":"158","endLine":4,"endColumn":74},{"ruleId":"155","severity":1,"message":"183","line":17,"column":8,"nodeType":"157","messageId":"158","endLine":17,"endColumn":14},{"ruleId":"155","severity":1,"message":"184","line":31,"column":21,"nodeType":"157","messageId":"158","endLine":31,"endColumn":29},{"ruleId":"155","severity":1,"message":"185","line":32,"column":11,"nodeType":"157","messageId":"158","endLine":32,"endColumn":17},{"ruleId":"155","severity":1,"message":"183","line":2,"column":8,"nodeType":"157","messageId":"158","endLine":2,"endColumn":14},{"ruleId":"155","severity":1,"message":"186","line":31,"column":12,"nodeType":"157","messageId":"158","endLine":31,"endColumn":19},{"ruleId":"155","severity":1,"message":"185","line":32,"column":11,"nodeType":"157","messageId":"158","endLine":32,"endColumn":17},"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'AlertTitle' is defined but never used.","'response' is assigned a value but never used.","'res' is assigned a value but never used.","'addIncome' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getIncomes'. Either include it or remove the dependency array.","ArrayExpression",["187"],"'useState' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array.",["188"],"'dollar' is defined but never used.","'Navigation' is defined but never used.","'title' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getExpenses' and 'getIncomes'. Either include them or remove the dependency array.",["189"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'getIncomes' is assigned a value but never used.","'transactions' is defined but never used.","'trend' is defined but never used.","'moment' is defined but never used.","'expenses' is assigned a value but never used.","'Moment' is assigned a value but never used.","'incomes' is assigned a value but never used.",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [getIncomes]",{"range":"196","text":"197"},"Update the dependencies array to be: [getExpenses]",{"range":"198","text":"199"},"Update the dependencies array to be: [getExpenses, getIncomes]",{"range":"200","text":"201"},[441,443],"[getIncomes]",[490,492],"[getExpenses]",[691,693],"[getExpenses, getIncomes]"]